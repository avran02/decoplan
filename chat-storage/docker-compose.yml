services:
  # chat-storage:
  #   image: avran02/decoplan-chat-storage
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     - SERVER_LOG_LEVEL=${SERVER_LOG_LEVEL}
  #     - SERVER_PORT=${SERVER_PORT}
  #     - SERVER_HOST=${SERVER_HOST}
  #     - MONGO_HOST=${MONGO_HOST}
  #     - MONGO_PORT=${MONGO_PORT}
  #     - MONGO_USER=${MONGO_USER}
  #     - MONGO_PASSWORD=${MONGO_PASSWORD}
  #     - MONGO_DATABASE=${MONGO_DATABASE}
  #     - REDIS_HOST=${REDIS_HOST}
  #     - REDIS_PORT=${REDIS_PORT}
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #   ports:
  #     - "${SERVER_PORT}:${SERVER_PORT}"
  #   restart: unless-stopped

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongo-data:/data/mongo

  mongoexpress:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGOUSER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/"
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo
    restart: always

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis-data:/data/redis

  redisinsights:
    image: redis/redisinsight
    restart: always
    ports:
      - '5540:5540'
    volumes:
      - ./data/redisinsight:/db


volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local