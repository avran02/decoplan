openapi: 3.0.0
info:
  title: Chat Microservice API
  version: 1.0.0
  description: API для управления чатом и сообщениями через WebSocket.

servers:
  - url: ws://host/v1
    description: Основной WebSocket сервер микросервиса чата

components:
  schemas:
    AttachmentsReq:
      type: array
      items:
        type: object
        properties:
          id: 
            type: string
            example: "1"
            description: ID вложения
          url:
            type: string
            format: url
            example: "https://files.host/uuid.jpg"
            description: URL вложения

    Message:
      type: object
      properties:
        id:
          type: string
          example: "1"
        sender:
          type: string
          example: "user123"
        content:
          type: object
          properties:
            text:
              type: string
              example: "Hello, world!"
              description: Текст вложения
            attachments:
              $ref: '#/components/schemas/AttachmentsReq'
              description: Список вложений
        timestamp:
          type: string
          format: date-time
          example: "2023-10-02T10:00:00Z"
    AskMessagesDto:
      type: object
      properties:
        chatId:
          type: string
          example: "chat-uuid"
        limit:
          type: number
          example: 10
          description: Количество сообщений
        offset:
          type: number
          example: 0
          description: Смещение
    DeleteMessageDto:
      type: object
      properties:
        chatId:
          type: string
          example: "chat-uuid"
        messageId:
          type: number
          example: 1
          description: ID сообщения
    NewMessageDto:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-10-02T10:00:00Z"
        chatId:
          type: string
          example: "chat-uuid"
        content:
          type: object
          properties:
            text:
              type: string
              example: "Hello, world!"
              description: Текст вложения
            attachments:
              $ref: '#/components/schemas/AttachmentsReq'
              description: Список вложений
    

paths:
  /connect:
    post:
      tags:
        - Connection
      security:
        - bearerAuth: []
      summary: Установить соединение WebSocket
      responses:
        '101':
          description: Соединение установлено
  /disconnect:
    post:
      tags:
        - Connection
      security:
        - bearerAuth: []
      summary: Закрыть соединение WebSocket
      responses:
        '101':
          description: Соединение закрыто 
  
  /new-message:
    get:
      tags:
        - FromServerEvent
      summary: Сервер отправляет новое сообщение на клиент
      responses:
        '200':
          description: Подписка успешна
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
                  
  /messages:
    put:
      tags:
        - FromUserEvent
      summary: Получить список сообщений
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/AskMessagesDto'
              
      responses:
        '200':
          description: Список сообщений получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      tags:
        - FromUserEvent
      summary: Отправить новое сообщение
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessageDto'
      responses:
        '201':
          description: Сообщение успешно отправлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /messages/{id}:
    delete:
      tags:
        - FromUserEvent
      summary: Удалить сообщение по ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMessageDto'
      responses:
        '204':
          description: Сообщение успешно удалено
        '404':
          description: Сообщение не найдено


